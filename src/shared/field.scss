@import '../../variables';
@import './normalize';

/**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font propertiesText to `inherit` in Safari.
   */

:host {
    font-size: var(--f-size);
    color: var(--f-color);
    position: relative;
    display: inline-flex;
    align-items: flex-start;
    line-height: 1.2;
    border-radius: $xs;
    max-width: 100%;
    -webkit-user-drag: none;
    // ~m-icon {
    //     margin: 0 .5rem 0 .2rem;
    //     color: var(--f-fadest);
    // }
}

:host(.xs) {
    --f-size: var(--f-xs);
    --py: .5rem;
    --px: .8rem;
    --size: 2rem;
    --label-px: .25rem;
    --label-f-size: .65625rem;
}

:host(.sm) {
    --py: 0.65625rem;
    --label-px: .25rem;
    --size: 2.5rem;
}

:host(.lg) {
    --f-size: var(--f-md);
    --py: 1rem;
    --px: 1.2rem;
    --size: 3.5rem;
    --label-px: .3125rem;
    --label-f-size: .9375rem;
}

:host(.outlined),
:host(.underlined) {
    backdrop-filter: none;
}

::slotted([role=accessor]) {
    cursor: text;
    color: inherit;
    border: 0;
    font-weight: inherit;
    -webkit-appearance: none;
    white-space: nowrap;
    font-family: inherit;
    font-size: inherit;
    text-align: inherit;
    line-height: inherit;
    letter-spacing: inherit;
    -webkit-text-fill-color: unset; // fix safari opacity problem
    user-select: text;
    -webkit-user-select: text;
    outline: none;
    background-color: transparent;
    -webkit-user-drag: none;
    touch-action: manipulation;
    -webkit-touch-action: manipulation;
    -webkit-touch-callout: none;
    -webkit-tap-highlight-color: transparent;
    padding: var(--py) var(--px);
}

@media (any-hover: hover) {
    :host(:not([disabled]):not([read-only]):hover) {
        fieldset {
            border-color: var(--b-color-active, var(--b-fade));
        }
    }
}

:host([read-only]:not(.output)) {
    fieldset {
        border-style: dashed;
    }
}

:host([keep-validity][read-only]) {
    pointer-events: none;
}

:host(.outlined:active:not([read-only]):not([disabled])),
:host(.outlined:focus-within:not([read-only]):not([disabled])),
:host(.outlined[focused]:not([read-only]):not([disabled])) {

    fieldset {
        border-width: calc(var(--b-width, 1px) + 1px);
        border-color: var(--b-color-active, var(--b-fade));
    }
}

:host(.underlined:active:not([read-only]):not([disabled])),
:host(.underlined:focus-within:not([read-only]):not([disabled])),
:host(.underlined[focused]:not([read-only]):not([disabled])) {

    fieldset {
        border-bottom-width: calc(var(--b-width, 1px) + 1px);
        border-color: var(--b-color-active, var(--b-fade));
    }
}

:host([label][empty]:not([busy]):not([expanded]):not([focused]):not(:focus-within):not(:active):not([read-only]):not([disabled]):not([type=file])) {

    slot[name=start],
    slot[name=end],
    ::slotted([role=accessor]),
    [part=body] {
        opacity: 0;
        transition-delay: 0s;
    }

    legend {
        max-width: 0;
    }

    label {
        transition-delay: .1s;
        transform: translate(0, var(--py));
    }
}

:host(.outlined) {

    fieldset {
        border-width: var(--b-width, 1px);
    }

    legend {
        transition: max-width .2s cubic-bezier(0.33, 1, 0.68, 1) .1s;
        margin-left: 0;
        will-change: max-width;
    }
}

:host(.outlined[label]:not([label=""])) {
    [part=label] {
        padding: 0 var(--label-px);
        letter-spacing: inherit;
        contain: strict;
    }
}

// outlined
:host(.outlined[busy]),
:host(.outlined[expanded]),
:host(.outlined[label]:not([empty]):not(:focus-within)) {
    legend {
        transition: none;
        margin-left: 0;
    }

}

// outlined
:host(.outlined[label]:active:not([read-only]):not([disabled])),
:host(.outlined[label]:focus-within:not([read-only]):not([disabled])),
:host(.outlined[label][focused]:not([read-only]):not([disabled])) {
    legend {
        transition:
            max-width .2s ease-in;
        margin-left: -1px;
        height: 2px;
    }
}

:host(.underlined) {
    --px: 0;
    border-radius: 0px;

    fieldset {
        border-bottom-width: var(--b-width, 1px);
        background-color: transparent;
    }
}

label {
    position: absolute;
    top: 0;
    left: var(--px);
    display: block;
    user-select: none;
    pointer-events: none;
    transition-property: transform, opacity;
    will-change: transform, opacity;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    transform-origin: left;
    line-height: inherit;
    color: var(--label-f-color);
    transform: scale(.75) translate(0, -65%);
    white-space: nowrap;
    letter-spacing: inherit;
    font-weight: inherit;
}

fieldset {
    position: absolute;
    box-sizing: border-box;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    margin: 0;
    display: flex;
    color: inherit;
    padding: 0 calc(var(--px) - .3125rem);
    border-radius: inherit;
    pointer-events: none;
    border-width: 0;
    border-color: var(--b-color);
    border-style: var(--b-style);
    background-color: var(--bg-color);
}

legend {
    max-width: 100%;
    height: 1px;
    font-size: var(--label-f-size);
    line-height: 0;
    padding: 0;
    margin: 0;
    contain: layout paint style;
    user-select: none;
    visibility: hidden;
}

::slotted(:invalid) {
    box-shadow: none;
}

slot[name=start],
slot[name=end],
[part=icon],
[part=body],
::slotted([role=accessor]) {
    box-sizing: border-box;
    transition: opacity .2s .1s cubic-bezier(0, 0, .2, 1);
    will-change: opacity;
}

slot[name=start],
slot[name=end],
[part=icon] {
    min-height: var(--size);
}

::slotted([role=accessor]) {
    z-index: 1;
    display: flex;
    text-overflow: ellipsis;
    -ms-text-overflow: ellipsis;
    align-items: center;
    contain: style;
    width: 100%;
}

slot[name=start]:not([empty]),
slot[name=end]:not([empty]),
[part=icon] {
    display: flex;
    user-select: none;
    white-space: nowrap;
    align-items: center;
}

slot[name=start]:not([empty]) {
    padding-left: var(--px);
    padding-right: .3125rem;
    margin-right: calc(var(--px) * -1);
}

slot[name=end]:not([empty]) {
    padding-right: var(--px);
    padding-left: .3125rem;
    margin-left: calc(var(--px) * -1);

    &::slotted(*) {
        font-size: var(--f-xxs);
        color: var(--f-fade);
    }
}

:host([busy]) {
    pointer-events: none !important;

    ::slotted([role=accessor]) {
        visibility: hidden;
    }

    [part=icon] {
        visibility: hidden;
    }

}

[part=spinner] {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    margin: auto;
    height: fit-content;
    width: fit-content;
    // padding-right: var(--px);
    // padding-left: calc(var(--px) / 2);
}

:host([disabled]) {

    -webkit-text-fill-color: var(--f-fadest); // fix safari opacity problem
    cursor: no-drop !important;
    color: var(--f-fadest) !important;

    fieldset {
        border-style: dashed;
        border-color: var(--b-color) !important;
    }

    &:after {
        display: none;
    }

}

[part=clear] {
    --button-bg-color-hover: var(--theme-fade);
    --button-f-color: var(--f-fadest);
    --button-f-size: var(--f-xxs);
    --button-size: 1.25rem;
    --icon-stroke-width: 3px;

    +[part=icon] {
        margin-left: .25rem;
    }
}